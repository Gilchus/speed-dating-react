[{"C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\index.js":"1","C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\App.js":"2","C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\Button.js":"3","C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\UserList.js":"4"},{"size":189,"mtime":1607286581567,"results":"5","hashOfConfig":"6"},{"size":4612,"mtime":1607370407413,"results":"7","hashOfConfig":"6"},{"size":258,"mtime":1607286581567,"results":"8","hashOfConfig":"6"},{"size":348,"mtime":1607286581567,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yoqyva",{"filePath":"12","messages":"13","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\index.js",[],"C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\App.js",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Button from \"./Button\";\r\nimport UserList from \"./UserList\";\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([\r\n    \r\n  ]);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputErrorText, setInputErrorText] = useState(null);\r\n  const [currentRound, setCurrentRound] = useState(0);\r\n  const [sessionData, setSessionData] = useState({rounds: []});\r\n  console.log(sessionData);\r\n\r\n  useEffect(() => {\r\n    if (currentRound != 0) {\r\n      console.log(\"use effect\");\r\n      const matchings = [];\r\n      for (let i = 0; i < users.length / 2; i++) {\r\n        let userA = users[Math.floor(Math.random() * users.length)];\r\n        \r\n        while (\r\n          matchings.find((matching) => {\r\n            if (matching.userA == userA || matching.userB == userA) return true;\r\n          })\r\n        ) {\r\n          userA = users[Math.floor(Math.random() * users.length)];\r\n        }\r\n\r\n        const userAlreadyMatched = (userB, matchings)=> {return matchings.find((matching) => {\r\n          if (matching.userA == userB || matching.userB == userB) return true;\r\n        })}\r\n\r\n        const matchingsMap = new Map();\r\n        for (const user of users) {\r\n          if (user == userA) continue;\r\n          if (userAlreadyMatched(user, matchings)) continue;\r\n          let matchingCount = 0;\r\n          for (const round of sessionData.rounds) {\r\n            for (const matching of round.matchings) {\r\n              if ((matching.userA == userA && matching.userB == user) || (matching.userA == user && matching.userB == userA)) {\r\n                matchingCount++;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          matchingsMap.set(user, matchingCount);\r\n        }\r\n\r\n        console.log(\"matching \" + userA)\r\n\r\n        console.log(matchingsMap);\r\n\r\n        let minValue = Number.MAX_VALUE;\r\n        for (const v of matchingsMap.values()) {\r\n          if (v < minValue) {\r\n            minValue = v;\r\n          }\r\n        }\r\n\r\n        const relevantUsers = [];\r\n\r\n        for (const u of matchingsMap.keys()) {\r\n          if (matchingsMap.get(u) == minValue) {\r\n            relevantUsers.push(u);\r\n          }\r\n        }\r\n\r\n        let userB = relevantUsers[Math.floor(Math.random() * relevantUsers.length)];\r\n  \r\n        console.log(\"Matched \" + userB)\r\n\r\n        matchings.push({ userA: userA, userB: userB });\r\n      }\r\n      const round = {number: currentRound, matchings}\r\n      const rounds = sessionData.rounds;\r\n      rounds.push(round);\r\n      setSessionData({ rounds });\r\n    }\r\n  }, [currentRound]);\r\n\r\n  const handleTextChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  let content = null;\r\n  if (currentRound == 0) {\r\n    const inputErrorContent =\r\n      inputErrorText != null ? (\r\n        <p className=\"InputError\">{inputErrorText}</p>\r\n      ) : null;\r\n    content = (\r\n      <div>\r\n        <h2 className=\"UserCounter\">Users: {users.length}</h2>\r\n        <UserList users={users} />\r\n        <input\r\n          onChange={handleTextChange}\r\n          value={inputText}\r\n          placeholder=\"Type name\"\r\n        ></input>\r\n        {inputErrorContent}\r\n        <Button\r\n          text=\"Add User\"\r\n          onClick={() => {\r\n            if (!users.includes(inputText)) {\r\n              users.push(inputText);\r\n              setInputText(\"\");\r\n              console.log(users);\r\n              setInputErrorText(\"\");\r\n            } else {\r\n              setInputErrorText(\"User \" + inputText + \" is already added!\");\r\n              setInputText(\"\");\r\n            }\r\n          }}\r\n        ></Button>\r\n        <Button\r\n          text=\"Start Session\"\r\n          onClick={() => {\r\n            setCurrentRound(1);\r\n          }}\r\n        ></Button>\r\n      </div>\r\n    );\r\n  } else {\r\n    let matchingsContent = null;\r\n    const currentRoundObject = sessionData.rounds.find((round)=> {return round.number == currentRound})\r\n    \r\n    if (currentRoundObject) {\r\n    \r\n      matchingsContent = currentRoundObject.matchings.map((matching, index) => (\r\n        <p className=\"MatchingsList\" key={matching.userA + matching.userB}>\r\n          {index + 1}: {matching.userA}-{matching.userB}\r\n        </p>\r\n      ));\r\n    }\r\n    content = <div>{matchingsContent}\r\n    <Button\r\n          text=\"Next Round\"\r\n          onClick={() => {\r\n            setCurrentRound(currentRound + 1);\r\n          }}\r\n        ></Button></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Speed Dating for Founders</h1>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\Button.js",["38","39"],"C:\\Users\\luis-\\OneDrive\\Dokumente\\GitHub\\speed-dating-react\\src\\UserList.js",["40","41"],{"ruleId":"42","severity":1,"message":"43","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":34},{"ruleId":"42","severity":1,"message":"46","line":7,"column":17,"nodeType":"44","messageId":"45","endLine":7,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":17,"column":22,"nodeType":"49","messageId":"50","endLine":17,"endColumn":24},{"ruleId":"51","severity":1,"message":"52","line":24,"column":26,"nodeType":"53","messageId":"54","endLine":26,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":24,"column":37,"nodeType":"53","messageId":"57","endLine":24,"endColumn":39},{"ruleId":"47","severity":1,"message":"58","line":25,"column":32,"nodeType":"49","messageId":"50","endLine":25,"endColumn":34},{"ruleId":"47","severity":1,"message":"58","line":25,"column":59,"nodeType":"49","messageId":"50","endLine":25,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":31,"column":91,"nodeType":"53","messageId":"57","endLine":31,"endColumn":93},{"ruleId":"47","severity":1,"message":"58","line":32,"column":30,"nodeType":"49","messageId":"50","endLine":32,"endColumn":32},{"ruleId":"47","severity":1,"message":"58","line":32,"column":57,"nodeType":"49","messageId":"50","endLine":32,"endColumn":59},{"ruleId":"47","severity":1,"message":"58","line":37,"column":20,"nodeType":"49","messageId":"50","endLine":37,"endColumn":22},{"ruleId":"47","severity":1,"message":"58","line":42,"column":35,"nodeType":"49","messageId":"50","endLine":42,"endColumn":37},{"ruleId":"47","severity":1,"message":"58","line":42,"column":62,"nodeType":"49","messageId":"50","endLine":42,"endColumn":64},{"ruleId":"47","severity":1,"message":"58","line":42,"column":90,"nodeType":"49","messageId":"50","endLine":42,"endColumn":92},{"ruleId":"47","severity":1,"message":"58","line":42,"column":116,"nodeType":"49","messageId":"50","endLine":42,"endColumn":118},{"ruleId":"47","severity":1,"message":"58","line":65,"column":35,"nodeType":"49","messageId":"50","endLine":65,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":81,"column":6,"nodeType":"61","endLine":81,"endColumn":20,"suggestions":"62"},{"ruleId":"47","severity":1,"message":"58","line":88,"column":20,"nodeType":"49","messageId":"50","endLine":88,"endColumn":22},{"ruleId":"47","severity":1,"message":"58","line":127,"column":87,"nodeType":"49","messageId":"50","endLine":127,"endColumn":89},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":23},{"ruleId":"42","severity":1,"message":"63","line":1,"column":25,"nodeType":"44","messageId":"45","endLine":1,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":23},{"ruleId":"42","severity":1,"message":"63","line":1,"column":25,"nodeType":"44","messageId":"45","endLine":1,"endColumn":33},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'userA', 'userA'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sessionData.rounds' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["64"],"'useState' is defined but never used.",{"desc":"65","fix":"66"},"Update the dependencies array to be: [currentRound, sessionData.rounds, users]",{"range":"67","text":"68"},[2617,2631],"[currentRound, sessionData.rounds, users]"]